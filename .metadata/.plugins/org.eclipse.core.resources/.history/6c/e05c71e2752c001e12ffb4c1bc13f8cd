package com.kd.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.repository.query.Param;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.kd.entity.Employee;
import com.kd.service.EmployeeService;

@RestController
@RequestMapping("/api")
public class EmployeeController {

	@Autowired
	private EmployeeService employeeService;

	@PostMapping("/save")
	public ResponseEntity<Employee> saveEmployee(@RequestBody Employee employee) {

		Employee saveEmployee = employeeService.saveEmployee(employee);

		return new ResponseEntity<Employee>(saveEmployee, HttpStatus.CREATED);
	}

	@GetMapping("/")
	public ResponseEntity<List<Employee>> getAllEmployee() {
		List<Employee> allEmployees = employeeService.getAllEmployees();

		return ResponseEntity.ok(allEmployees);
	}

	@GetMapping("/{empId}")
	public ResponseEntity<Employee> getEmployeeById(@PathVariable Long empId) {
		Employee employee = employeeService.getEmployee(empId);
		return ResponseEntity.ok(employee);
	}

	@GetMapping("/name/{empFirstName}")
	public ResponseEntity<List<Employee>> getEmployeeByName(@Param("empFirstName") String empFirstName) {
		List<Employee> employeeByName = employeeService.getEmployeeByName(empFirstName);
		return ResponseEntity.ok(employeeByName);
	}

	@PutMapping("/{empId}")
	public ResponseEntity<Employee> updateEmployee(@PathVariable Long empId, @RequestBody Employee employee) {
		Employee employee2 = employeeService.getEmployee(empId);
		employee2.setEmpFirstName(employee.getEmpFirstName());
		employee2.setEmpLastName(employee.getEmpLastName());

		Employee employee3 = employeeService.saveEmployee(employee2);

		return ResponseEntity.ok(employee3);
	}

	@DeleteMapping("/{empId}")
	public void deleteEmployee(@PathVariable Long empId) {
		employeeService.deleteEmployee(empId);
	}

}
